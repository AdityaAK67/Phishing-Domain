import json
import pdfkit

def generate_html_report(report_data, output_file="phishing_report.html"):
    """Generates a modern phishing risk report in HTML format."""
    
    html_template = """<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Phishing Risk Report</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }
        .container {
            width: 90%;
            max-width: 1000px;
            margin: 20px auto;
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
        }
        h1 {
            text-align: center;
            color: #333;
            font-size: 24px;
            text-transform: uppercase;
            margin-bottom: 20px;
        }
        .report-card {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }
        .card {
            flex: 1 1 calc(50% - 10px);
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s;
        }
        .card:hover {
            transform: translateY(-5px);
        }
        .risk-high {
            border-left: 5px solid #e74c3c;
        }
        .risk-warning {
            border-left: 5px solid #f1c40f;
        }
        .risk-low {
            border-left: 5px solid #2ecc71;
        }
        .domain {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .score {
            font-size: 16px;
            font-weight: bold;
        }
        .comment {
            font-style: italic;
            color: #555;
            margin: 10px 0;
        }
        .reasons {
            font-size: 14px;
            color: #333;
            padding-left: 15px;
        }
        .footer {
            margin-top: 20px;
            text-align: center;
            font-size: 14px;
            color: #555;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Phishing Risk Report</h1>
        <div class="report-card">
"""

    for entry in report_data:
        
        risk_class = "risk-low"
        if entry["risk_score"] > 75:
            risk_class = "risk-high"
        elif entry["risk_score"] > 50:
            risk_class = "risk-warning"
        
        
        reasons_list = "".join(f"<li>{reason}</li>" for reason in entry["reasons"])

        
        html_template += f"""
            <div class="card {risk_class}">
                <div class="domain">{entry["domain"]}</div>
                <div class="score">Risk Score: {entry["risk_score"]}</div>
                <div class="status"><b>Status:</b> {entry["status"]}</div>
                <div class="comment">{entry["comment"]}</div>
                <div class="reasons">
                    <b>Reasons:</b>
                    <ul>{reasons_list}</ul>
                </div>
            </div>
"""

    html_template += """
        </div>
        <div class="footer">
            <p>Generated by Phishing Detection System | &copy; 2025 SecureCodeAI</p>
        </div>
    </div>
</body>
</html>
"""

    # Write the HTML file
    with open(output_file, "w", encoding="utf-8") as file:
        file.write(html_template)

    print(f"‚úÖ Modern phishing report successfully generated: {output_file}")

def convert_html_to_pdf(input_html="phishing_report.html", output_pdf="phishing_report.pdf"):
    """Converts the generated HTML report to a PDF."""
    try:
        pdfkit.from_file(input_html, output_pdf)
        print(f"‚úÖ Report successfully converted to PDF: {output_pdf}")
    except Exception as e:
        print(f"‚ùå Error generating PDF: {e}")


report_data = [
    {
        "id": "1",
        "domain": "fake-instagram.com",
        "risk_score": 90,
        "status": "Completed",
        "comment": "üö® Confirmed phishing site!",
        "reasons": [
            "üîí SSL certificate does not match original domain.",
            "üìú Page content similarity 85% is suspicious.",
            "üÜî WHOIS information does not match original domain."
        ]
    },
    {
        "id": "2",
        "domain": "secure-paypal.com",
        "risk_score": 50,
        "status": "Warning",
        "comment": "‚ö†Ô∏è Strong signs of phishing, further investigation required.",
        "reasons": [
            "üìú Page content similarity 72% is suspicious."
        ]
    }
]

# Generate the HTML and PDF report
generate_html_report(report_data)
convert_html_to_pdf()
